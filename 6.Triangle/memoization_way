class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        int  n = triangle.size();
        int dp[][] = new int [n][n];
        for(int  i = 0;i<triangle.size();i++)
        {
            for(int j = 0;j<i+1;j++)
             dp[i][j] = -1;
        }
     return tri(0, 0, triangle, dp);  
    }

    int tri(int i, int j, List<List<Integer>> triangle, int dp[][]){
        if(i == triangle.size()-1)
          return triangle.get(i).get(j);
        if(dp[i][j] != -1)  return dp[i][j];

        int down = triangle.get(i).get(j) + tri(i+1, j, triangle, dp);
        int diagonal = triangle.get(i).get(j) + tri(i+1, j+1, triangle, dp);
        return dp[i][j] = Math.min(down, diagonal);
    }
}
